<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ViewRaspyHome.Style">
    <!--|   COLOR   |-->
    <Color x:Key="White"
           A="255"
           R="245"
           G="245"
           B="245"/>
    
    <Color x:Key="LightGray"
           A="255"
           R="222"
           G="222"
           B="222"/>

    <Color x:Key="Gray"
           A="255"
           R="173"
           G="173"
           B="173"/>

    <Color x:Key="DarkGray"
           A="255"
           R="60"
           G="60"
           B="60"/>

    <Color x:Key="ShadowGray"
           A="255"
           R="63"
           G="63"
           B="70"/>

    <Color x:Key="BlueAzure"
           A="255"
           R="55"
           G="113"
           B="200"/>

    <Color x:Key="LightBlueAzure"
           A="255"
           R="95"
           G="141"
           B="211"/>

    <Color x:Key="Crimson"
           A="255"
           R="200"
           G="55"
           B="55"/>

    <Color x:Key="Lime"
           A="255"
           R="204"
           G="255"
           B="0"/>

    <Color x:Key="GreenCyan"
           A="255"
           R="55"
           G="200"
           B="55"/>

    <!--Event color-->
    <Color x:Key="WhiteOnEvent"
           A="128"
           R="245"
           G="245"
           B="245"/>

    <Color x:Key="DarkGrayOnEvent"
           A="128"
           R="60"
           G="60"
           B="60"/>

    <Color x:Key="BlueAzureOnEvent"
           A="128"
           R="55"
           G="113"
           B="200"/>

    <Color x:Key="LightBlueAzureOnEvent"
           A="128"
           R="95"
           G="141"
           B="211"/>

    <Color x:Key="CrimsonOnEvent"
           A="128"
           R="200"
           G="55"
           B="55"/>

    <Color x:Key="LimeOnEvent"
           A="128"
           R="204"
           G="255"
           B="0"/>

    <Color x:Key="GreenCyanOnEvent"
           A="128"
           R="55"
           G="200"
           B="55"/>
    
    <!--|   BRUSH   |-->
    <SolidColorBrush x:Key="DefaultBackColor" 
                     Color="{StaticResource White}"/>

    <SolidColorBrush x:Key="DefaultBackgroundColor" 
                     Color="{StaticResource ShadowGray}"/>

    <SolidColorBrush x:Key="DefaultToolbarBackgroundColor" 
                     Color="{StaticResource CrimsonOnEvent}"/>

    <SolidColorBrush x:Key="DefaultBorderColor" 
                     Color="{StaticResource DarkGray}"/>

    <SolidColorBrush x:Key="OverColor" 
                     Color="{StaticResource WhiteOnEvent}"/>

    <SolidColorBrush x:Key="PressedColor" 
                     Color="{StaticResource DarkGrayOnEvent}"/>
    <!--|   STYLE   |-->
    <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource DefaultBackColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBackgroundColor}"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="70">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!--On over-->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" 
                                    Value="{StaticResource OverColor}"
                                    TargetName="Border"/>
                            <Setter Property="BorderThickness"
                                    Value="6"
                                    TargetName="Border"/>
                        </Trigger>

                        <!--Button pressed-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" 
                                    Value="{StaticResource PressedColor}"
                                    TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>